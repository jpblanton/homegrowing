version: "3.9"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "5"

services:

  web:
    build:
      context: .
      dockerfile: ${HG_DFILE}
    command: python /code/manage.py runserver 0.0.0.0:8000
    networks:
      - homegrowing
    volumes:
      - .:/code
    logging: *default-logging
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_DEBUG=True"
      - "DJANGO_SECRET_KEY"
      - "CELERY_BROKER_URL"

  asgi:
    build:
      context: .
      dockerfile: ${HG_DFILE}
    networks:
      - homegrowing
    command: mqttasgi -H 192.168.1.210 -p 1883 config.asgi:application
    logging: *default-logging
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - web
      - mosquitto
    environment:
      - "DJANGO_DEBUG=True"
      - "DJANGO_SECRET_KEY"
      - "CELERY_BROKER_URL"
        
  db:
    image: postgres:13
    networks:
      - homegrowing
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    logging: *default-logging
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5432:5432"

  celery:
    build:
      context: .
      dockerfile: ${HG_DFILE}
    command: celery --app config worker --loglevel=info
    networks:
      - homegrowing
    volumes:
      - .:/code
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY
      - DJANGO_ALLOWED_HOSTS
      - CELERY_BROKER
    logging: *default-logging
    depends_on:
      - web
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: ${HG_DFILE}
    command: celery -A config beat -l info
    networks:
      - homegrowing
    logging: *default-logging
    volumes:
      - .:/code
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY
      - DJANGO_ALLOWED_HOSTS
      - "CELERY_BROKER_URL"
    depends_on:
      - redis

  redis:
    image: redis:6-alpine
    networks:
      - homegrowing
    logging: *default-logging

  mosquitto:
    image: eclipse-mosquitto
    networks:
      - homegrowing
    ports:
      - "1883:1883"
      - "9001:9001"
    profiles:
      - mqtt
    logging: *default-logging
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  # probably need to map the config file for this service
  # there is a "configs" option that we should look into
  device-control:
    build:
      context: ./device-controller/
    devices:
      - /dev/mem:/dev/mem
      - /dev/gpiomem:/dev/gpiomem
    command: python3 device-controller.py --host mqtt
    logging: *default-logging
    networks:
      - homegrowing
    profiles:
      - devices
    depends_on:
      - mosquitto
      - web

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - homegrowing
    logging: *default-logging
    volumes:
      - grafana_data:/var/lib/grafana
      - ./defaults.ini:/usr/share/grafana/conf/defaults.ini
    depends_on:
      - db

volumes:
  postgres_data:
  grafana_data:
networks:
  homegrowing:
    driver: bridge
